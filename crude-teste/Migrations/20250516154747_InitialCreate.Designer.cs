// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using crude_teste.Data;

#nullable disable

namespace crude_teste.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250516154747_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.36");

            modelBuilder.Entity("crude_teste.Models.Cliente", b =>
                {
                    b.Property<int>("CodigoCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CodigoCliente");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoPessoa")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("UsuarioInsercao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("CodigoCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("crude_teste.Models.Telefone", b =>
                {
                    b.Property<int>("CodigoCliente")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CodigoCliente")
                        .HasColumnOrder(0);

                    b.Property<string>("NumeroTelefone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT")
                        .HasColumnName("NumeroTelefone")
                        .HasColumnOrder(1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CodigoTipoTelefone")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Operadora")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("UsuarioInsercao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("CodigoCliente", "NumeroTelefone");

                    b.HasIndex("CodigoTipoTelefone");

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("crude_teste.Models.TipoTelefone", b =>
                {
                    b.Property<int>("CodigoTipoTelefone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CodigoTipoTelefone");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescricaoTipoTelefone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("UsuarioInsercao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("CodigoTipoTelefone");

                    b.ToTable("TiposTelefone");

                    b.HasData(
                        new
                        {
                            CodigoTipoTelefone = 1,
                            DataInsercao = new DateTime(2025, 5, 16, 12, 47, 47, 345, DateTimeKind.Local).AddTicks(7907),
                            DescricaoTipoTelefone = "RESIDENCIAL",
                            UsuarioInsercao = "SYSTEM"
                        },
                        new
                        {
                            CodigoTipoTelefone = 2,
                            DataInsercao = new DateTime(2025, 5, 16, 12, 47, 47, 345, DateTimeKind.Local).AddTicks(7917),
                            DescricaoTipoTelefone = "COMERCIAL",
                            UsuarioInsercao = "SYSTEM"
                        },
                        new
                        {
                            CodigoTipoTelefone = 3,
                            DataInsercao = new DateTime(2025, 5, 16, 12, 47, 47, 345, DateTimeKind.Local).AddTicks(7918),
                            DescricaoTipoTelefone = "WHATSAPP",
                            UsuarioInsercao = "SYSTEM"
                        },
                        new
                        {
                            CodigoTipoTelefone = 4,
                            DataInsercao = new DateTime(2025, 5, 16, 12, 47, 47, 345, DateTimeKind.Local).AddTicks(7919),
                            DescricaoTipoTelefone = "CELULAR",
                            UsuarioInsercao = "SYSTEM"
                        });
                });

            modelBuilder.Entity("crude_teste.Models.Telefone", b =>
                {
                    b.HasOne("crude_teste.Models.Cliente", "Cliente")
                        .WithMany("Telefones")
                        .HasForeignKey("CodigoCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("crude_teste.Models.TipoTelefone", "TipoTelefone")
                        .WithMany("Telefones")
                        .HasForeignKey("CodigoTipoTelefone")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("TipoTelefone");
                });

            modelBuilder.Entity("crude_teste.Models.Cliente", b =>
                {
                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("crude_teste.Models.TipoTelefone", b =>
                {
                    b.Navigation("Telefones");
                });
#pragma warning restore 612, 618
        }
    }
}
